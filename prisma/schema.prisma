// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_DIRECT_URL")
}

model User {
  id        String     @id @default(uuid())
  uid       String     @unique // firebase
  name      String
  email     String     @unique // Unique email address
  photoUrl  String?
  elective  elective[]
  section   Section    @relation(fields: [sectionId], references: [id])
  sectionId String
  createdAt DateTime   @default(now()) // Timestamp for when the record was created
  updatedAt DateTime   @updatedAt // Timestamp for when the record was last updated
}

model elective {
  id        String @id @default(uuid())
  name      String
  room      String
  startTime Int
  endTime   Int
  section   String
  days      Days[]
  user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
}

model Section {
  id        String @id @default(uuid())
  name      String
  semester  Int
  timetable Day[]
  users     User[]

  @@unique([semester, name])
}

model Day {
  id        String     @id @default(uuid())
  section   Section    @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  sectionId String
  weekDay   String
  schedule  Schedule[]
}

model Schedule {
  id        String @id @default(uuid())
  startTime String
  endTime   String
  subject   String
  room      String
  day       Day    @relation(fields: [dayId], references: [id], onDelete: Cascade)
  dayId     String
}

model Holiday {
  id    String @id @default(uuid())
  event String @unique
  dates String
  days  String
}

enum Days {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
}
