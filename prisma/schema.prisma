// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model RemoteUser {
  id              Int      @id @default(autoincrement())
  uid             String   @unique // firebase
  name            String
  email           String   @unique // Unique email address
  photoUrl        String
  section         String
  electiveSection String[]
  createdAt       DateTime @default(now()) // Timestamp for when the record was created
  updatedAt       DateTime @updatedAt // Timestamp for when the record was last updated

  @@index([section]) // Index on section for better query performance
}

// Define the model for Holiday
model Holiday {
  id           Int      @id @default(autoincrement()) // Unique identifier for the holiday
  eventName    String
  eventDate    DateTime // Use DateTime type to store dates
  numberOfDays Int
  createdAt    DateTime @default(now()) // Timestamp for when the record was created
  updatedAt    DateTime @updatedAt // Timestamp for when the record was last updated
}

// Define the model for Schedule
model Schedule {
  id          Int      @id @default(autoincrement()) // Unique identifier for the schedule entry
  subject     String
  startTime   Int // Assuming these are stored as integer hours (24-hour format)
  endTime     Int
  room        String
  facultyName String
  section     String
  days        String[] // Array of days the schedule applies to
  createdAt   DateTime @default(now()) // Timestamp for when the record was created
  updatedAt   DateTime @updatedAt // Timestamp for when the record was last updated

  @@index([section]) // Index on section for better query performance
}
